(()=>{"use strict";class t{static SkipDelay=1e3;static BlurSpeed=30;currentIndex=0;baselines;constructor(){this.baselines=document.querySelectorAll("#splash .baseline"),this.parse(),this.next().catch((t=>console.error(t)))}parse(){this.baselines.forEach((t=>{const e=t.textContent.split(""),s=[];t.textContent="",e.forEach((t=>{const e=document.createElement("span");e.textContent=t,e.classList.add("blur"),s.push(e)})),t.append(...s)}))}async next(){setTimeout((async()=>{await this.animate(!1),setTimeout((async()=>(await this.animate(!0),this.getCurrent().classList.remove("active"),this.currentIndex++,this.currentIndex>=this.baselines.length&&(this.currentIndex=0),this.getCurrent().classList.add("active"),this.next())),t.SkipDelay)}),20)}async animate(e){const s=this.getCurrent().querySelectorAll("span");let n;s.forEach((t=>{const s=t.classList;e?s.remove("blur"):s.add("blur")}));for(const a of s){const s=a.classList;e?s.add("blur"):s.remove("blur"),await new Promise((e=>setTimeout(e,t.BlurSpeed))),n=a}return new Promise((t=>{n.addEventListener("transitionend",(()=>t()),{once:!0})}))}getCurrent(){return this.baselines.item(this.currentIndex)}}class e{constructor(){document.querySelectorAll("a.obm").forEach((t=>{this.decode(t)}))}decode(t){try{const e=t.dataset.m,s=window.atob(e);t.href="mailto:"+s,t.textContent=s,t.classList.add("contact-mail")}catch(t){console.error(t)}t.classList.remove("obm"),delete t.dataset.m}}class s{static start(){new t,new e}}addEventListener("DOMContentLoaded",(()=>{s.start()}))})();